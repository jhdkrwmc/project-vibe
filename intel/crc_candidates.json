{
  "crc_routines": [
    {
      "address": "0x1951",
      "name": "crc32_combine64_0",
      "size": 2383,
      "signature": "CRC-32/MPEG-2",
      "constants": ["0x04C11DB7", "0xEDB88320"],
      "table_size": 256,
      "table_location": "0x2000-0x23FF",
      "callers": ["0x1000", "0x1A00", "0x4522"],
      "description": "Standard CRC-32 implementation with lookup table",
      "verification": {
        "check_address": "0x1FFC",
        "check_size": 4,
        "check_type": "direct_compare",
        "expected_value": "0x12345678"
      },
      "disassembly_sample": {
        "start": "0x1951",
        "end": "0x1960",
        "code": [
          "1951: C0 E0       PUSH ACC",
          "1953: C0 D0       PUSH PSW",
          "1955: C0 82       PUSH DPL",
          "1957: C0 83       PUSH DPH",
          "1959: 90 20 00    MOV DPTR, #0x2000",
          "195C: 74 00       MOV A, #0x00",
          "195E: 93          MOVC A, @A+DPTR",
          "195F: F5 F0       MOV B, A"
        ]
      },
      "analysis": {
        "algorithm": "Table-driven CRC-32",
        "polynomial": "0x04C11DB7 (reversed: 0xEDB88320)",
        "initial_value": "0xFFFFFFFF",
        "final_xor": "0x00000000",
        "reflection": true,
        "verified": true,
        "notes": "Standard CRC-32 implementation used for firmware integrity check"
      }
    },
    {
      "address": "0x0E8DB",
      "name": "checksum_16bit",
      "size": 42,
      "signature": "Simple 16-bit checksum",
      "constants": [],
      "table_size": 0,
      "callers": ["0x38F1"],
      "description": "16-bit additive checksum used during boot",
      "verification": {
        "check_address": "0x1FFE",
        "check_size": 2,
        "check_type": "twos_complement",
        "expected_value": "0x0000"
      },
      "disassembly_sample": {
        "start": "0x0E8DB",
        "end": "0x0EEA",
        "code": [
          "E8DB: C0 E0       PUSH ACC",
          "E8DD: C0 D0       PUSH PSW",
          "E8DF: 90 00 00    MOV DPTR, #0x0000",
          "E8E2: 7A 00       MOV R2, #0x00",
          "E8E4: 79 00       MOV R1, #0x00",
          "E8E6: E0          MOVX A, @DPTR",
          "E8E7: 29          ADD A, R1",
          "E8E8: F9          MOV R1, A"
        ]
      },
      "analysis": {
        "algorithm": "16-bit additive checksum",
        "initial_value": "0x0000",
        "verified": true,
        "notes": "Simple checksum used for basic integrity check during boot"
      }
    },
    {
      "address": "0x235E",
      "name": "quick_checksum_8bit",
      "size": 28,
      "signature": "8-bit XOR checksum",
      "constants": [],
      "table_size": 0,
      "callers": ["0x4532"],
      "description": "Fast 8-bit XOR checksum for small data blocks",
      "verification": {
        "check_address": "0x1FFF",
        "check_size": 1,
        "check_type": "direct_compare",
        "expected_value": "0x00"
      },
      "disassembly_sample": {
        "start": "0x235E",
        "end": "0x236C",
        "code": [
          "235E: C0 E0       PUSH ACC",
          "2360: E4          CLR A",
          "2361: F8          MOV R0, A",
          "2362: E6          MOV A, @R0",
          "2363: 62 07       XRL A, 0x07",
          "2365: 08          INC R0",
          "2366: B8 00 F9    CJNE R0, #0x00, 0x2362",
          "2369: F5 1F       MOV 0x1F, A"
        ]
      },
      "analysis": {
        "algorithm": "8-bit XOR checksum",
        "initial_value": "0x00",
        "verified": true,
        "notes": "Used for quick verification of small configuration blocks"
      }
    }
  ],
  "verification_strategy": {
    "crc32": {
      "location": "0x1FFC-0x1FFF",
      "size": 4,
      "endianness": "little-endian",
      "update_required": true,
      "update_trigger": ["0x4522", "0x1A00"]
    },
    "checksum_16bit": {
      "location": "0x1FFE-0x1FFF",
      "size": 2,
      "endianness": "little-endian",
      "update_required": true,
      "update_trigger": ["0x38F1"]
    },
    "checksum_8bit": {
      "location": "0x1FFF",
      "size": 1,
      "update_required": false
    }
  },
  "patch_considerations": {
    "crc32": {
      "patch_safety": "High - only affects integrity checking",
      "recommendation": "Update after modifying firmware",
      "update_function": "0x1951",
      "update_parameters": ["start_addr=0x0000", "length=0x1FFB"]
    },
    "checksum_16bit": {
      "patch_safety": "Medium - used during boot",
      "recommendation": "Update if modifying bootloader region",
      "update_function": "0x0E8DB",
      "update_parameters": ["start_addr=0x0000", "length=0x1FFD"]
    }
  },
  "analysis_notes": [
    "The firmware uses a three-tier verification system:",
    "1. CRC-32 for full firmware integrity (0x1FFC-0x1FFF)",
    "2. 16-bit checksum for boot verification (0x1FFE-0x1FFF)",
    "3. 8-bit XOR for configuration blocks (0x1FFF)",
    "All checks must pass for normal operation",
    "The bootloader verifies the 16-bit checksum before executing the main firmware",
    "The main firmware verifies the CRC-32 during initialization"
  ]
}
