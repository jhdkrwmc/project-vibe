SAFE DATA-ONLY OSD DISABLE PLAN
================================

PROBLEM IDENTIFIED
------------------
Both FW_A and FW_B patches caused full bricks (camera not appearing in USB list)
This indicates that even "post-integrity" code injection is detected by the firmware

ROOT CAUSE ANALYSIS
-------------------
1. Multiple integrity checks at different stages
2. Control Flow Integrity (CFI) monitoring
3. Memory integrity checks in specific regions
4. Timing/sequence validation
5. Our injected calls disrupt expected execution patterns

SAFER APPROACH: DATA-ONLY PATCHING
----------------------------------
Instead of injecting code, modify existing OSD control data values
This avoids triggering integrity checks while achieving OSD disable

FW_A DATA-ONLY PATCH STRATEGY
-----------------------------
Target: 0xBB73 (main OSD enable writer)
Current: MOV A,#0xFF; MOVX @DPTR,A (enables OSD)
Patch: Change 0xFF to 0x00 (disables OSD)

Steps:
1. Locate the immediate value 0xFF at 0xBB73+1
2. Change it to 0x00
3. Apply minimal checksum compensation
4. No code injection, no new execution paths

FW_B DATA-ONLY PATCH STRATEGY
-----------------------------
Target: Multiple OSD control registers
Current: Various enable values (likely 0xFF)
Patch: Change enable values to 0x00

Steps:
1. Locate immediate values that enable OSD
2. Change them to 0x00
3. Apply minimal checksum compensation
4. No code injection, no new execution paths

ADVANTAGES OF DATA-ONLY APPROACH
--------------------------------
1. ✅ No code injection - avoids CFI detection
2. ✅ No new execution paths - maintains expected flow
3. ✅ Minimal changes - reduces integrity check triggers
4. ✅ Reversible - easy to restore if needed
5. ✅ Lower risk of bricking

IMPLEMENTATION PLAN
------------------
1. Create data-only patch scripts for both firmwares
2. Test on FW_A first (lower risk)
3. Verify OSD disable without code injection
4. Apply to FW_B if successful
5. Document exact changes for rollback

RISK ASSESSMENT: VERY LOW
-------------------------
- Only data value changes
- No code structure modifications
- No execution flow changes
- Minimal integrity check impact
- Easy to verify and rollback

NEXT STEPS
----------
1. Create data-only patch for FW_A
2. Test on camera
3. If successful, create FW_B patch
4. Document successful approach
